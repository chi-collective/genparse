start: query_expr "</s>"

query_expr: select [ "ORDER" "BY" (order_by_expr ",")*  order_by_expr] [ "LIMIT" integer_ ] 

select: "SELECT" [(select_expr ",")*] select_expr "FROM" "data" [ "WHERE" bool_expression ] [ "GROUP" "BY" [(expression ",")*] expression ]

select_expr.0: expression_math [ [ "AS" ] alias ] -> select_expression

?expression_math: expression_product
               | expression_math PLUS expression_product -> expression_add
               | expression_math MINUS expression_product -> expression_sub
               | AGGREGATION expression_math /\)/ -> sql_aggregation

?expression: (name | STAR) -> column_name
            | literal

?expression_product: expression_parens
                  | expression_product STAR expression_parens -> expression_mul
                  | expression_product "/" expression_parens -> expression_div

?expression_parens: expression
                  | /\(/ expression_parens STAR expression /\)/ -> expression_mul
                  | /\(/  expression_parens "/" expression /\)/ -> expression_div
                  | /\(/  expression_parens PLUS expression /\)/ -> expression_add
                  | /\(/  expression_parens MINUS expression /\)/ -> expression_sub

bool_expression: bool_parentheses
                 | bool_expression "AND" bool_parentheses -> bool_and
                 | bool_expression "OR" bool_parentheses -> bool_or
bool_parentheses: comparison_type
                 | /\(/   bool_expression "AND" comparison_type /\)/ -> bool_and
                 | /\(/  bool_expression "OR" comparison_type /\)/ -> bool_or
comparison_type: equals | not_equals | greater_than | less_than | greater_than_or_equal
| less_than_or_equal | is_null | is_not_null
equals: expression_math "=" expression_math
not_equals: expression_math ("<>" | "!=") expression_math
greater_than: expression_math ">" expression_math
less_than: expression_math "<" expression_math
greater_than_or_equal: expression_math ">=" expression_math
less_than_or_equal: expression_math "<=" expression_math
is_null: expression_math "is" "null"
is_not_null: expression_math "is" "not" "null"

alias: /[A-Za-z]/
name: /[A-Za-z]/
PLUS: /\+/
MINUS: /[\-]/

order_by_expr: expression_math ["ASC"] -> order_asc
        | expression_math "DESC" -> order_desc

AGGREGATION.8: ("sum(" | "avg(" | "min(" | "max(" | "count(" "distinct" | "count(")
STAR: /\*/
integer_: /[1-9][0-9]*/
?literal: boolean -> bool
       | integer_ -> number
       | /'([^']|\s)+'|''/ -> string

boolean: "true" -> true
       | "false" -> false

%import common.WS
%ignore WS